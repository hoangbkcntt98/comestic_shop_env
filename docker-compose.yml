version: '3'
services:
  backend:
    build:
      context: ${BACKEND_ENV_DIR}/php
      dockerfile: Dockerfile
    container_name: backend
    volumes:
      - ${BACKEND_SOURCE_DIR}:/var/www/
      - ${BACKEND_ENV_DIR}/php/init.sh:/tmp/init.sh
    environment:
      - APP_NAME=${APP_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - 5173:5173
  webserver:
    image: nginx
    container_name: webserver
    volumes:
      - ${BACKEND_SOURCE_DIR}:/var/www/
      - ${BACKEND_ENV_DIR}/nginx/default.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
    depends_on:
      - backend
  database:
    image: mysql:8.0
    container_name: database
    ports:
      - 33061:3306
    volumes:
      - ${BACKEND_ENV_DIR}/database/data:/var/lib/mysql
      - ${BACKEND_ENV_DIR}/database/init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_DATABASE=${APP_NAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
  mailhog:
    image: mailhog/mailhog
    ports:
      - 8025:8025
      - 1025:1025
  frontend:
    build:
      context: ${FRONTEND_ENV_DIR}
      dockerfile: Dockerfile
    user: "root"
    privileged: true
    environment:
      - NODE_ENV=development
    volumes:
      - ${FRONTEND_SOURCE_DIR}/${APP_NAME}/build:/app/build
      - ${FRONTEND_SOURCE_DIR}/${APP_NAME}/src:/app/src
      - ${FRONTEND_SOURCE_DIR}/${APP_NAME}/public:/app/public
    ports:
      - "3000:3000"
